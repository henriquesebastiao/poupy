[tool.poetry]
name = "poupy"
version = "0.1.0"
description = "A webapp for personal budget management made with Django. "
authors = ["Henrique Sebasti√£o <contato@henriquesebastiao.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0"
python-dotenv = "^1.0.0"
psycopg2-binary = "^2.9.10"
gunicorn = "^21.2.0"
whitenoise = {extras = ["brotli"], version = "^6.6.0"}
django-debug-toolbar = "^4.2.0"
docutils = "^0.20.1"
python-decouple = "^3.8"
djangorestframework = "^3.16.0"

[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.0"
pytest = "^7.4.3"
pytest-django = "^4.7.0"
coverage = "^7.3.2"
pytest-cov = "^4.1.0"
selenium = "^4.15.2"
pylint-django = "^2.5.5"
requests = "^2.32.3"
ruff = "^0.7.2"
mypy = "^1.13.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
ignore = ['PLR6201', 'PLR2004', 'PLR6201', 'PT009', 'PLR6301']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.ruff.lint.per-file-ignores]
"project/settings.py" = ['E501']
"project/apps/app/tests/**/*py" = ['E501']
"project/apps/website/tests/**/*py" = ['E501']
"manage.py" = ['PLC0415']

[tool.pytest.ini_options]
pythonpath = "."
DJANGO_SETTINGS_MODULE = "project.settings"
python_files = "test.py tests.py test_*.py tests_*.py *_test.py *_tests.py"
addopts = "--doctest-modules --strict-markers -v"
markers = [
    "functional_test: Run tests that are selenium based",
]

[tool.coverage.run]
branch = true
omit = ["**/*test*.py", "manage.py", "**/migrations/*", "**/project/*.py"]

[tool.coverage.html]
directory = "htmlcov"

[tool.taskipy.tasks]
lint = 'ruff check .; ruff check . --diff'
format = 'ruff format .; ruff check . --fix'
run = 'python manage.py runserver'
pre_test = 'task lint'
test = 'pytest -m "not functional_test" -s -x --cov=project -vv'
functional-test = 'pytest -m "functional_test"'
post_test = 'coverage html'
export-requirements = "rm requirements.txt && poetry export -f requirements.txt --output requirements.txt --without-hashes --without dev"
update-chromedriver = "python scripts/update_chromedriver.py"